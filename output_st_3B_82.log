INFO:root:time: 2025年 03月 16日 星期日 20:41:49 CST

INFO:root:pid: 49935
INFO:root:seed: 366
INFO:root:model: Qwen2.5-Coder-3B-Instruct
INFO:root:generate: Structure
INFO:root:result_path: /home/qikahh/projects/Structured_Code_Context/Datasets/DevEval/Qwen2.5-Coder-3B-Instruct/result_st_0.json
INFO:accelerate.utils.modeling:We will use 90% of the memory on device 0 for storing the model, and 10% for the buffer to avoid OOM. You can set `max_memory` in to a higher value to use more memory (at your own risk).
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.17s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.42it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:01<00:00,  1.30it/s]
INFO:root:--------data 82--------
INFO:root:file too long datasette.datasette<folder>.utils<folder>.__init__<file>.truncate_url<func>, cut 7/144 nodes
data 82:   0%|          | 0/190 [00:00<?, ?it/s]data 82:   5%|▌         | 10/190 [00:44<13:24,  4.47s/it]data 82:  11%|█         | 20/190 [01:23<11:43,  4.14s/it]data 82:  16%|█▌        | 30/190 [02:03<10:47,  4.04s/it]data 82:  21%|██        | 40/190 [02:43<10:04,  4.03s/it]data 82:  26%|██▋       | 50/190 [03:22<09:18,  3.99s/it]data 82:  32%|███▏      | 60/190 [03:59<08:27,  3.90s/it]data 82:  37%|███▋      | 70/190 [04:37<07:42,  3.85s/it]data 82:  42%|████▏     | 80/190 [05:14<06:59,  3.81s/it]data 82:  47%|████▋     | 90/190 [05:54<06:25,  3.86s/it]data 82:  53%|█████▎    | 100/190 [06:30<05:40,  3.79s/it]data 82:  58%|█████▊    | 110/190 [07:09<05:06,  3.83s/it]data 82:  63%|██████▎   | 120/190 [07:48<04:28,  3.84s/it]data 82:  68%|██████▊   | 130/190 [08:26<03:49,  3.83s/it]data 82:  74%|███████▎  | 140/190 [09:03<03:10,  3.80s/it]data 82:  79%|███████▉  | 150/190 [09:40<02:30,  3.77s/it]data 82:  84%|████████▍ | 160/190 [10:17<01:52,  3.76s/it]data 82:  89%|████████▉ | 170/190 [10:58<01:16,  3.84s/it]data 82:  95%|█████████▍| 180/190 [11:36<00:38,  3.83s/it]data 82: 100%|██████████| 190/190 [12:14<00:00,  3.83s/it]data 82: 100%|██████████| 190/190 [12:19<00:00,  3.89s/it]
INFO:root:函数头: 
def truncate_url(url, length):

INFO:root:目标函数体: 
    if (not length) or (len(url) <= length):
        return url
    bits = url.rsplit(".", 1)
    if len(bits) == 2 and 1 <= len(bits[1]) <= 4 and "/" not in bits[1]:
        rest, ext = bits
        return rest[: length - 1 - len(ext)] + "…." + ext
    return url[: length - 1] + "…"

INFO:root:生成结果: 
    if len(url) <= length:
        return url

    # If URL ends with a file extension and length is between 1 and 4 characters without a slash
    if url.endswith(".txt") and len(url) - url.rfind(".") - len(url.rsplit("/", 1)[-1]) <= 4:
        return url[:length - len(url.rfind(".") - len(url.rsplit("/", 1)[-1]))] + "..."

    # If URL ends with a file extension and length is between 5 and 9 characters without a slash
    if url.endswith(".txt") and len(url) - url.rfind(".") - len(url.rsplit("/", 1)[-1]) <= 9:
        return url[:length - len(url.rfind(".") - len(url.rsplit("/", 1)[-1]))] + "..."

    # If URL ends with a file extension and length is between 10 and 

INFO:root:----------------------------------------
INFO:root:kv length: 10240
INFO:root:max position: 14692
INFO:root:context_num: 446
INFO:root:target_namespace: datasette.datasette<folder>.utils<folder>.__init__<file>.truncate_url<func>
INFO:root:time: 2025年 03月 16日 星期日 20:54:20 CST

INFO:root:****************************************
data 82:   0%|          | 0/190 [00:00<?, ?it/s]data 82:   5%|▌         | 10/190 [00:37<11:17,  3.77s/it]data 82:  11%|█         | 20/190 [01:15<10:39,  3.76s/it]data 82:  16%|█▌        | 30/190 [01:54<10:14,  3.84s/it]data 82:  21%|██        | 40/190 [02:32<09:34,  3.83s/it]data 82:  26%|██▋       | 50/190 [03:10<08:54,  3.82s/it]data 82:  32%|███▏      | 60/190 [03:48<08:16,  3.82s/it]data 82:  37%|███▋      | 70/190 [04:27<07:41,  3.84s/it]data 82:  42%|████▏     | 80/190 [05:07<07:06,  3.88s/it]data 82:  47%|████▋     | 90/190 [05:44<06:21,  3.81s/it]data 82:  47%|████▋     | 90/190 [06:15<06:57,  4.18s/it]
INFO:root:函数头: 
def truncate_url(url, length):

INFO:root:目标函数体: 
    if (not length) or (len(url) <= length):
        return url
    bits = url.rsplit(".", 1)
    if len(bits) == 2 and 1 <= len(bits[1]) <= 4 and "/" not in bits[1]:
        rest, ext = bits
        return rest[: length - 1 - len(ext)] + "…." + ext
    return url[: length - 1] + "…"

INFO:root:生成结果: 
    if len(url) <= length:
        return url
    elif url.endswith(".html") or url.endswith(".json"):
        ext_len = len(url.split(".")[-1])
        if ext_len >= 1 and ext_len <= 4 and "/" not in url.split(".")[-2]:
            return url[:length - ext_len - 3] + "..." + url.split(".")[-2] + url.split(".")[-1]
    return url[:length] + "..."


INFO:root:----------------------------------------
INFO:root:kv length: 10055
INFO:root:max position: 14673
INFO:root:context_num: 392
INFO:root:target_namespace: datasette.datasette<folder>.utils<folder>.__init__<file>.truncate_url<func>
INFO:root:time: 2025年 03月 16日 星期日 21:00:36 CST

INFO:root:****************************************
data 82:   0%|          | 0/190 [00:00<?, ?it/s]data 82:   5%|▌         | 10/190 [00:36<10:56,  3.65s/it]data 82:  11%|█         | 20/190 [01:14<10:32,  3.72s/it]data 82:  16%|█▌        | 30/190 [01:54<10:21,  3.88s/it]data 82:  21%|██        | 40/190 [02:34<09:48,  3.92s/it]data 82:  26%|██▋       | 50/190 [03:11<08:56,  3.83s/it]data 82:  32%|███▏      | 60/190 [03:50<08:19,  3.84s/it]data 82:  37%|███▋      | 70/190 [04:28<07:40,  3.83s/it]data 82:  42%|████▏     | 80/190 [05:08<07:09,  3.91s/it]data 82:  47%|████▋     | 90/190 [05:48<06:33,  3.93s/it]data 82:  53%|█████▎    | 100/190 [06:28<05:54,  3.94s/it]data 82:  58%|█████▊    | 110/190 [07:05<05:09,  3.87s/it]data 82:  63%|██████▎   | 120/190 [07:42<04:27,  3.83s/it]data 82:  68%|██████▊   | 130/190 [08:22<03:51,  3.87s/it]data 82:  74%|███████▎  | 140/190 [09:19<03:41,  4.43s/it]data 82:  74%|███████▎  | 140/190 [10:32<03:45,  4.52s/it]
INFO:root:函数头: 
def truncate_url(url, length):

INFO:root:目标函数体: 
    if (not length) or (len(url) <= length):
        return url
    bits = url.rsplit(".", 1)
    if len(bits) == 2 and 1 <= len(bits[1]) <= 4 and "/" not in bits[1]:
        rest, ext = bits
        return rest[: length - 1 - len(ext)] + "…." + ext
    return url[: length - 1] + "…"

INFO:root:生成结果: 
    if len(url) <= length:
        return url

    # If the URL ends with a file extension and the extension length is between 1 and 4 characters without, slash
    if url.endswith(".") and len(url.split(".")[-2]) >= 1 and len(url.split(".")[-2]) <= 4 and "/" not in url.split(".")[-2]:
        # Truncate the URL to the specified length and add ellipsis and the extension at the end
        return url[:-len(url.split(".")[-2])] + "..." + url.split(".")[-2]

    # If the URL length is less than or equal to the specified length, return the original URL
    return url[:length] + "..."


INFO:root:----------------------------------------
INFO:root:kv length: 10683
INFO:root:max position: 14754
INFO:root:context_num: 426
INFO:root:target_namespace: datasette.datasette<folder>.utils<folder>.__init__<file>.truncate_url<func>
INFO:root:time: 2025年 03月 16日 星期日 21:11:08 CST

INFO:root:****************************************
INFO:root:--------data 83--------
data 83:   0%|          | 0/272 [00:00<?, ?it/s]data 83:   0%|          | 0/272 [00:34<?, ?it/s]
Traceback (most recent call last):
  File "/home/qikahh/projects/Structured_Code_Context/test_hierarchical_model.py", line 430, in <module>
    json.dump(generation_result, open(result_file, "w"), indent=4)
    ^^^^^^
  File "/home/qikahh/projects/Structured_Code_Context/test_hierarchical_model.py", line 289, in main
    if (step+1)%10 == 0:
                ^^^^^^^^^
  File "/home/qikahh/projects/Structured_Code_Context/utils/hierarchical_model.py", line 1075, in generate_step
    part_key, part_value, part_hidden = self.encode_by_layer(hidden, start_layer_idx, end_layer_idx-1, now_pos)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/projects/Structured_Code_Context/utils/hierarchical_model.py", line 150, in encode_by_layer
    layer_outputs = decoder_layer(
                    ^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 629, in forward
    hidden_states, self_attn_weights, present_key_value = self.self_attn(
                                                          ^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/transformers/models/qwen2/modeling_qwen2.py", line 325, in forward
    attn_weights = nn.functional.softmax(attn_weights, dim=-1, dtype=torch.float32).to(query_states.dtype)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/qikahh/miniconda3/lib/python3.11/site-packages/torch/nn/functional.py", line 1887, in softmax
    ret = input.softmax(dim, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 9.82 GiB. GPU 
